#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc_l {
            bindings = <&kp ESCAPE>;
            key-positions = <17 16>;
        };

        combo_esc_r {
            bindings = <&kp ESCAPE>;
            key-positions = <19 18>;
        };

        combo_caps_word {
            bindings = <&caps_word>;
            key-positions = <24 35>;
        };

        combo_ctrl_c {
            bindings = <&kp LC(C)>;
            key-positions = <26 27>;
        };

        combo_ctrl_x {
            bindings = <&kp LC(X)>;
            key-positions = <25 26>;
        };

        combo_ctrl_v {
            bindings = <&kp LC(V)>;
            key-positions = <28 27>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LGUI RBKT    &kp Q  &kp W  &kp E        &kp R            &kp T        &kp Y              &kp U                 &kp I        &kp O    &kp P     &kp LBKT
&mt LALT GRAVE   &kp A  &kp S  &kp D        &kp F            &kp G        &kp H              &kp J                 &kp K        &kp L    &kp SEMI  &mt RALT SQT
&mt LCTRL MINUS  &kp Z  &kp X  &kp C        &kp V            &kp B        &kp N              &kp M                 &kp COMMA    &kp DOT  &kp FSLH  &mt RCTRL BSLH
                               &lt RSE TAB  &mt LSHFT SPACE  &lt LWR RET  &lt LWR BACKSPACE  &mt RSHFT RA(RSHIFT)  &lt RSE DEL
            >;
        };

        lower_layer {
            bindings = <
&mt LGUI F1      &kp F2    &kp F3  &kp F4    &kp F5    &kp F6     &kp F7     &kp F8    &kp F9    &kp F10   &kp F11   &kp F12
&mt LALT PLUS    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &mt RALT MINUS
&mt LCTRL EQUAL  &kp N1    &kp N2  &kp N3    &kp N4    &kp N5     &kp N6     &kp N7    &kp N8    &kp N9    &kp N0    &kp RCTRL
                                   &trans    &trans    &trans     &trans     &trans    &trans
            >;
        };

        raise_layer {
            bindings = <
&mt LGUI KP_NUM  &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS  &kp PRINTSCREEN  &kp HOME      &kp PG_DN     &kp PG_UP   &kp END        &trans
&mt LALT EQUAL   &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS   &kp INS          &kp LEFT      &kp DOWN      &kp UP      &kp RIGHT      &mt RALT K_APP
&kp LCTRL        &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT    &kp K_MUTE       &kp LC(LEFT)  &kp LC(DOWN)  &kp LC(UP)  &kp LC(RIGHT)  &kp RCTRL
                                             &trans     &trans     &trans        &trans           &trans        &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&sys_reset   &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &sys_reset
                                         &trans        &none         &trans        &none         &trans        &trans
            >;
        };
    };
};
